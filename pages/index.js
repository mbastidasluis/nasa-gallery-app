import Head from 'next/head'
import { Inter } from '@next/font/google'
import styles from '../styles/Home.module.css'
import fetcher from '../utils/fetcher'
import { useRandomImage } from '../hooks/useRandomImage'
import ImagePlaceholder from '../utils/ImagePlaceholder'

const inter = Inter({ subsets: ['latin'] })

export default function Home({
  roversMetadata
}) {


  const { roversNames, currentPhotos, currentRover } = useRandomImage(roversMetadata)

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.header}>
          <div className={styles.headerLeft}>
            <div className={styles.headerTitle}>Welcome to the official <span className={styles.appName}>NASA Gallery App</span></div>
            <div className={styles.headerSubTitle}>You will see the best pictures taken by our rovers on Mars!</div>
          </div>

          {currentRover &&
            <div className={styles.headerRight}>
              <div>Rover: {currentRover.name}</div>
              <div>Launch date: {currentRover.launch_date}</div>
              <div>Landing date: {currentRover.landing_date}</div>
              <div>Mission status: {currentRover.status}</div>
            </div>
          }

        </div>
        <div className={styles.container}>
          {currentPhotos && <Features features={currentPhotos} />}
        </div>
        <footer>Luis A. Bastidas M., 2022</footer>
      </main>

    </>
  )
}

const Features = ({ features }) =>
  <div className={styles.gallery}>
    {features.map((feature, i) =>
      <ImagePlaceholder  {...feature} key={i} />
    )}
  </div>

export async function getStaticProps() {
  const isDevMode = process.env.NODE_ENV !== 'production'
  // TODO add production URL
  // Checking if the app is in development mode.
  // The base URL must be included when calling another API from here.
  const baseURL = isDevMode ? 'http://localhost:3000' : 'https://nasa-gallery-app.vercel.app'
  const result = await fetcher(`${baseURL}/api/roversMetadata`)
  return { props: { roversMetadata: result && result.roversMetadata ? result.roversMetadata : {} } }
}